---
on:
  push:
    paths:
      - '.github/**/*.yaml'
      - '.github/**/*.yml'
      - 'Containerfile'
      - 'Dockerfile'
  workflow_dispatch:
  schedule:
  - cron: '0 23 * * *'

jobs:
  build-container:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    strategy:
      matrix:
        container:
          - build-args: |
              RELEASE=latest
              BASE=ghcr.io/aheimsbakk/alpine-base
            tags: |
              ghcr.io/${{ github.repository_owner }}/munin:latest
            platforms: linux/amd64,linux/arm64
            containerfile: Containerfile
          - build-args: |
              RELEASE=latest
              BASE=ghcr.io/aheimsbakk/alpine-base
            tags: |
              ghcr.io/${{ github.repository_owner }}/munin:latest
            platforms: linux/amd64,linux/arm64
            containerfile: Containerfile

    env:
      STORAGE_DRIVER: vfs
      BUILDAH_FORMAT: docker
      BUILDAH_ISOLATION: chroot

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: ${{ github.ref == 'refs/heads/master' || github.event_name == 'schedule' }}
          provenance: false
          platforms: ${{ matrix.container.platforms }}
          tags: ${{ matrix.container.tags }}
          file: ${{ matrix.container.containerfile }}
          build-args: ${{ matrix.container.build-args }}

      - name: Clean up old versions
        if: github.ref == 'refs/heads/master' || github.event_name == 'schedule' 
        uses: actions/delete-package-versions@v5
        with:
          package-type: container
          package-name: alpine
          min-versions-to-keep: 10
          delete-only-untagged-versions: true
