---
on:
  push:
    paths:
      - '**/*.yaml'
      - '**/*.yml'
      - 'Containerfile'
      - 'Dockerfile'
  workflow_dispatch:
  schedule:
  - cron: '0 23 * * *'

jobs:
  build-container:
    runs-on: docker
    container:
      image: vel.heimsbakk.no/containers/runner-debian:latest

    env: 
      STORAGE_DRIVER: overlay
      BUILDAH_FORMAT: docker
      BUILDAH_ISOLATION: chroot

    steps:
      - name: Get container registry path
        run: | 
          REGISTRY_PATH=${{ github.server_url }}
          REGISTRY_PATH=$(echo ${REGISTRY_PATH} | sed "s#https://##g")/${{ github.repository_owner }}
          echo REGISTRY_PATH=${REGISTRY_PATH} >> $GITHUB_ENV

      - name: Get repository name
        run: | 
          IMAGE_NAME=${{ github.repository }}
          REPO_OWNER=${{ github.repository_owner }}
          IMAGE_NAME=$(echo ${IMAGE_NAME} | sed "s#${REPO_OWNER}/##g")
          IMAGE_NAME=$(echo ${IMAGE_NAME} | sed "s#container-##g")
          echo IMAGE_NAME=${IMAGE_NAME} >> $GITHUB_ENV

      - name: Check out repository
        uses: actions/checkout@v4

      # - name: Buildah build for all platforms
      #   run: |
      #     buildah build --platform=linux/amd64 --manifest ${{ env.IMAGE_NAME }}

      # - name: Buildah tag images
      #   run: |
      #     echo --- buildah tag localhost/${{ env.IMAGE_NAME }} ${{ env.REGISTRY_PATH }}/${{ env.IMAGE_NAME }}:latest
      #     buildah tag localhost/${{ env.IMAGE_NAME }} ${{ env.REGISTRY_PATH }}/${{ env.IMAGE_NAME }}:latest

      #     # echo --- buildah manifest rm localhost/${{ env.IMAGE_NAME }}
      #     # buildah manifest rm localhost/${{ env.IMAGE_NAME }}
      #     # buildah images


      - name: Build container
        id: build-container
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}
          platform: linux/amd64
          tags: main latest
          containerfiles: |
            ./Containerfile

      - run: |
          echo ${{ steps.build-container.outputs.image }}
          echo ${{ steps.build-container.outputs.tags }}
          echo ${{ env.REGISTRY_PATH }}


      - name: Registry login
        run: |
          echo "${{ secrets.REGISTRY_PASS }}" | buildah login -u "${{ secrets.REGISTRY_USER }}" --password-stdin ${{ env.REGISTRY_PATH }}

      - name: Registry push
        run: |
          for tag in ${{ steps.build-container.outputs.tags }}; do
            echo $tag
            echo {{ steps.build-container.outputs.image }}:${tag}
            buildah manifest exists {{ steps.build-container.outputs.image }}:${tag}
          done
          echo 
          #buildah manifest push --all ${{ env.REGISTRY_PATH }}/${{ env.IMAGE_NAME }}:latest docker://${{ env.REGISTRY_PATH }}/${{ env.IMAGE_NAME }}:latest

      # - name: Build container
      #   id: build-container
      #   uses: redhat-actions/buildah-build@v2
      #   with:
      #     image: ${{ env.IMAGE_NAME }}
      #     tags: latest
      #     containerfiles: |
      #       ./Containerfile

      # - run: |
      #     echo ${{ steps.build-container.outputs.image }}
      #     echo ${{ steps.build-container.outputs.tags }}
      #     echo ${{ env.REGISTRY_PATH }}

      # - name: Push Container when on main branch
      #   id: push-container
      #   if: github.ref == 'refs/heads/master' || github.event_name == 'schedule'
      #   uses: redhat-actions/push-to-registry@v2
      #   with:
      #     image: ${{ steps.build-container.outputs.image }}
      #     tags: ${{ steps.build-container.outputs.tags }}
      #     registry: ${{ env.REGISTRY_PATH }}
      #     username: ${{ secrets.REGISTRY_USER }}
      #     password: ${{ secrets.REGISTRY_PASS }}

      # - name: Print container url when on main branch
      #   if: github.ref == 'refs/heads/master' || github.event_name == 'schedule'
      #   run: echo "Image pushed to ${{ steps.push-container.outputs.registry-paths }}"
